import{resolve as t}from"@thwack/resolve";const e={"application/json":"json","multipart/form-data":"formData","*/*":"text","text/event-stream":"stream"},s=([t],[e])=>t<e?-1:t>e?1:0,r=t=>Object.entries(t).sort(s).map(([t,e])=>`${encodeURIComponent(t)}=${encodeURIComponent(e)}`).join("&"),n=e=>{const{url:s,baseURL:n=s,params:a,resolver:o=t,paramsSerializer:c=r}=e,i=o(s,n),[p,u]=((t,e)=>{const s={...e};return[t.split("/").map(t=>{if(t.startsWith(":")){const e=t.substr(1),r=s[e];return delete s[e],encodeURIComponent(r)}return t}).join("/"),s]})(i,a);return((t,e)=>{const s=t.includes("?")?"&":"?";return`${t}${e?s:""}${e}`})(p,c(u))},a="undefined"!=typeof Blob,o=t=>t>=200&&t<300,c={arraybuffer:"arrayBuffer",document:"formData"};class i{constructor(t,e){const{status:s=200,statusText:r="Status "+s,data:n,headers:a={}}=t;this.status=s,this.statusText=r,this.ok=o(s),this.data=n,this.headers="function"==typeof a.entries?Object.fromEntries(a.entries()):a,this.options=e,this.response=t}}class p{constructor(t,e){this.type=t,this.defaultPrevented=!1,this.propagationStopped=!1,this._payload=e}preventDefault(){this.defaultPrevented=!0}stopPropagation(){this.propagationStopped=!0}}class u extends p{constructor(t,e){super(t,e),Object.defineProperty(this,"thwackResponse",{get(){return this._payload}})}}class d extends u{constructor(t){super("data",t)}}class l extends u{constructor(t){super("error",t)}}class h extends Error{constructor(t){super("ThwackResponseError"),this.message="Status "+t.status,this.name="ThwackResponseError",this.thwackResponse=t}}const f=async function(t){if(!(t instanceof i))throw new Error("Thwack: callback must return a ThwackResponse");t.data=await async function(t){const{response:s,options:r}=t,{responseType:n,responseParserMap:a}=r,o=(i=n||((t="",s)=>{const[r]=t.split(";"),n=r.trim(),[a]=n.split("/"),o={...e,...s};return o[n]||o[a+"/*"]||o["*/*"]})(t.headers["content-type"],a),c[i]||i);var i;return"stream"===o?s.body:s[o]?s[o]():t.data}(t);const{validateStatus:s=o}=t.options;if(s(t.status)){const e=new d(t),s=await this.dispatchEvent(e),{defaultPrevented:r}=e;return r&&!s.ok?f.call(this,s):s}const r=new l(t),n=await this.dispatchEvent(r),{defaultPrevented:a}=r;if(a&&n.ok)return f.call(this,n);if(!(n instanceof i))throw new Error("Thwack: callback must return a ThwackResponse");throw new h(n)};class w extends u{constructor(t){super("response",t)}}class m extends p{constructor(t){super("request",t),Object.defineProperty(this,"options",{get(){return this._payload}})}}const y=(t={},e={})=>Object.keys({...t,...e}).reduce((s,r)=>{const n=null!=e[r]?e[r]:t[r];return{...s,[r]:(a=n,"[object Object]"===Object.prototype.toString.call(a)?y(t[r],e[r]):n)};var a},{}),v=(t,e)=>y(t.defaults,e),b=async function(t){const{...e}=v(this,t),s=new m(e),r=await this.dispatchEvent(s),{defaultPrevented:o}=s;if(o)return f.call(this,r);const c=r,p=await async function(t){const{url:e,baseURL:s,fetch:r,data:o,headers:c,...i}=t;if(!r)throw new Error("Thwack: Invalid options object during request. Check your event callbacks.");o&&!c["content-type"]&&(c["content-type"]=(t=>a&&t instanceof Blob?t.type:"application/json")(o));const p=o&&"application/json"===c["content-type"]?JSON.stringify(o):o;return r(n({...t,url:e,baseURL:s}),{...0!==Object.keys(c).length&&{headers:c},...!!p&&{body:p,method:"POST"},...i})}(c),u=new w(new i(p,c));return f.call(this,await this.dispatchEvent(u))},E=function(t,e){const s=(...t)=>s.request((t=>t.length>1?{...t[1],url:t[0]}:t[0])(t));return s.defaults=t,s.request=b.bind(s),["GET","DELETE","HEAD"].forEach(t=>{const e=t.toLowerCase();s[e]=(e,r)=>s.request({...r,method:t,url:e})}),["PUT","POST","PATCH"].forEach(t=>{const e=t.toLowerCase();s[e]=(e,r,n)=>s.request({...n,method:t,url:e,data:r})}),s.getUri=t=>{const e=v(s,t);return n(e)},s.create=t=>{const e=v(s,t);return E(e,s)},((t,e)=>{let s=0;const r={request:[],response:[],data:[],error:[]};t.addEventListener=(t,e)=>{r[t].push(e)},t.removeEventListener=(t,e)=>{r[t]=r[t].filter(t=>t!==e)},t.dispatchEvent=t=>r[t.type].reduce((e,r)=>e.then(()=>{if(s+=1,s>=5)throw new Error("Thwack: maximum request depth reached");return t.propagationStopped?void 0:r(t)}).finally(()=>{s-=1}).then(e=>{void 0!==e&&(t._payload=e)}),e?e.dispatchEvent(t):Promise.resolve()).then(()=>t._payload)})(s,e),s},k=E({maxDepth:5,params:{},headers:{accept:"application/json, text/plain, */*"},buildURL:"complete"});if(k.ThwackResponseError=h,k.ThwackResponse=i,k.all=t=>Promise.all(t),k.spread=t=>e=>t(...e),"undefined"!=typeof window){const{fetch:t,location:e}=window;if(k.defaults.fetch=t,e){const{origin:t,pathname:s}=e;k.defaults.baseURL=`${t}${s}`}}export default k;
//# sourceMappingURL=thwack.modern.js.map
